name: Build Python Executable

on:
  workflow_dispatch:
    inputs:
      build_id:
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_SECRET }}
        with:
          tag_name: ${{ github.event.inputs.build_id }}
          release_name: Release ${{ github.event.inputs.build_id }}
          body: |
            First release version on ${{ github.event.inputs.build_id }}.

      - name: Set output value
        id: set_output
        run: echo "::set-output name=upload_url::${{ steps.create_release.outputs.upload_url }}"
  build-on-print:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
     - run: echo "upload_url :${{ needs.create-release.outputs.upload_url }}"

  build-on-macos:
    runs-on: macos-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.0'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build macOS executable
        run: |
          pyinstaller --onefile --distpath ./dist/macos hello.py

      - name: Upload macOS executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_SECRET }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist/macos/hello
          asset_name: hello-macos-${{ github.event.inputs.build_id }}
          asset_content_type: application/octet-stream

  build-on-linux:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.0'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Linux executable
        run: |
          pyinstaller --onefile --distpath ./dist/linux hello.py

      - name: Upload Linux executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_SECRET }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist/linux/hello
          asset_name: hello-linux-${{ github.event.inputs.build_id }}
          asset_content_type: application/octet-stream

  build-on-windows:
    runs-on: windows-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.0'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Windows executable
        run: |
          pyinstaller --onefile --distpath ./dist/windows hello.py

      - name: Upload Windows executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_SECRET }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist/windows/hello.exe
          asset_name: hello-windows-${{ github.event.inputs.build_id }}.exe
          asset_content_type: application/octet-stream
